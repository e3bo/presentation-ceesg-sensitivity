% An R-based approach to global sensitivity analysis for moments of stochastic models
% Eamon O'Dea
% February 3, 2016

# Sensitivity analysis is not uncertainty analysis

\includegraphics[width=\textwidth]{sensitivity-vs-uncertainty.png}

<!---

Goal: After seeing this presentation, people will understand what
Sobol indices are, what they are used for, and how to calculate them
for both deterministic and stochastic models in R.

Target length: 30 min, 3600--4800 words
--->

<div class="notes">
#This par provides a general definition of sensitivity analysis

Sensitivity analysis is a term I often hear people use to mean
essentially a check that your results do not dramatically change when
you change your model parameters to account for the fact that you are
not sure what the best values for them are, but it has a broader
definition. In fact, you could argue that when used in the sense I
just described, the goal is to determine the ramifications of
uncertainty in model parameters on the model output. That type of
analysis might more accurately be described as uncertainty
analysis. By contrast, sensitivity analysis can more narrowly be
defined as determing the relationship between uncertainity in output
and uncertainty in input. Thus sensitivity analysis could be a
prerequisite of an uncertainty analysis. However, as the figure shows,
the outcome of your uncertainty analyis depends on both model
sensitivity and uncertainty in the inputs. If the range of inputs
differ, a model with low sensitivity can have greater uncertainty in
the output than a model with high sensitivity. Sensitivity is a
property of the model itself and could be used for things besides
uncertainty analysis such as a powers analysis (if your model output
is a test statistic) or a model reduction procedure. In this example
the sensitivity did not depend on the inputs but in general that is of
course not the case.

</div>

# Local sensitivity analysis is not global sensitivity analysis

\includegraphics[width=\textwidth]{local-vs-global.png}

<div class="notes">
#This par provides a general definition of global sensitivity analysis

A sensitivity analysis that measures the variation in uncertainty in
outputs over a range of inputs rather than at a particular point in
parameter space is known as a global sensitivity analysis. As the
figures demonstrate global and local sensitivities may differ
dramatically. Thus a local analysis may not be appropriate if you are
interested in the sensitivity of a model over a range of input space
rather than at a point. I typically associated sensitivity analysis
with an elasticity analysis which essentially just calculates the
gradient of your model at a point and is a local method. There are a
variety of global methods available. They include making scatter
plots, regression modelling, and partially ranked correlation
coefficients. One approach that makes relatively few assumptions about
your data is variance decomposition.

</div>

# Sobol indices $S_{i_1\cdots i_s}$ result from a functional ANOVA

\begin{align}
f(x) &= f_0 + \sum_i f_i(x_i) + \sum_{i < j} f_{ij}(x_i, x_j) + \cdots \nonumber \\
 & \quad\qquad + f_{12\cdots n}(x_1, x_2, \ldots, x_n), \nonumber \\
\int f^2(x) \mathrm{d}x - f^2_0 &= \sum_{x=1}^n \sum_{i_1 < \cdots < i_s}^n \int f^2_{i_1 \cdots i_s} \mathrm{d}x_{i_1} \cdots \mathrm{d} x_{i_s} \nonumber \\
D &= \sum_{x=1}^n \sum_{i_1 < \cdots < i_s}^n D_{i_1 \cdots i_s} \nonumber \\
S_{i_1\cdots i_s} &= \frac{D_{i_1 \cdots i_s}}{D} \nonumber
\end{align}


<div class="notes">
#This par introduces Sobol indices

A standard method of global sensitivity analysis is to decompose the
variance in a model's output into variances of functions of
successively larger sets of input variables. These equations show how
the variances result from the initial functional decomposition. The
function $f$ represents our model and it has $n$ inputs labeled $x_1$
through $x_n$. With the exception of the $f_0$, the functions on the
right hand side are constrained to integrate to zero. Then they are
orthogonal so that squaring both sides of the equation and integrating
results in the next equation. Each term $D$ in the sum is referred to
as a variance as if the $x_i$ were random variables. The sobol indices
for a set of parameters is the proportion of variance they explain
after accounting for the variance explained by all subsets of the
parameters. Note that there is no assumption made about the linearity
of any of the $f$ functions. The main assumptions is that all of their
squared integrals are finite. These indices are also called global
sensitivity indices. Sobol is associated with them because he showed
that they could be estimated via a set of evaluations of $f$.

</div>

# Estimators for variances of partitions $y$ and $z$ of variables
Let
\begin{align*}
K &= \{k_1, \ldots, k_m\}, \\
y &= \{x_{k_1}, \ldots, x_{k_m}\}, \\
z &= \{x_1, \ldots, x_n\} \setminus y \\
D_y &= \sum_{s=1}^m \sum_{\{i_1 < \cdots < i_s\} \in K} D_{i_1 \cdots i_s}.
\end{align*}
Then
\begin{align*}
&\frac{1}{N} \sum_{j=1}^N f(\xi_j) \xrightarrow{P} f_0, \qquad
\frac{1}{N} \sum_{j=1}^N f(\xi_j) f(\eta_j, \zeta'_j) \xrightarrow{P}
D_y + f_0^2, \\
&\frac{1}{N} \sum_{j=1}^N f^2(\xi_j) \xrightarrow{P} D + f_0^2, \qquad
\frac{1}{N} \sum_{j=1}^N f(\xi_j) f(\eta'_j, \zeta_j) \xrightarrow{P}
D_z + f_0^2.
\end{align*}

<div class="notes">
#This par describes the estimation method for $D_y$

Although several estimation methods exist, the following estimation
method is a standard one. Let $K$ be a subset of indices for the input
parameters of $f$. Let $y$ be the set of variables having these
indices and $z$ be the rest of the variables. Let $\xi_j$ and $\xi'_j$
be the $j$th members of two independently sampled sets of points from
the unit cube corresponding to the input parameters. $\eta$ and
$\zeta$ are the subsets of the coordinates that correspond to $y$ and
$z$. It follows from the earlier decomposition of $f$ that as the
number of samples $N$ grows, the probability that any of these
estimates for variances have a given error approaches zero. Note,
however, that these variance are actually sums of the variances needed
to calculate Sobol indices for individual variables.

</div>

# Sobol indices follow from $D_y$

Example: $y = \{x_i\}$, set of a single variable
\begin{align*}
S_y &= D_y / D \\
S_i &= S_y
\end{align*}

# Sobol indices follow from $D_y$

Example: $y = \{x_i,x_j\}$, set of two variables
\begin{align*}
S_y &= D_y / D \\
S_{ij} &= S_y - S_i - S_j \nonumber
\end{align*}

<div class="notes">

Once the $D_y$ are estimated, calculation of Sobol indices is
straightforward. If $y$ contains a single input variable, then the
quotient $D_y / D$ yields the Sobol index for that variables. If $y$
contains a pair of inputs, then $D_z / D$ less the individual Sobol
indices for members of the pair yield the Sobol index for the
pair. Remember, this index measures the contribution of this pair of
variables to variation in the output indepently of the univariate
contributions of each variables. You might think of it as determing
the sensitivity of the interaction of this pair of variables. If you
would like to know the sensitivity of one variable and all of its
interactions with all variables, you can calculate a total Sobol
index.

</div>


# Total Sobol indices follow from $D_z$

Example: $y = \{x_i\}$, set of a single variable
\begin{align*}
S_z &= D_z / D \\
S_i^{\textrm{tot}} &= 1 - S_z
\end{align*}

# Total Sobol indices follow from $D_z$

Example: $y = \{x_i,x_j\}$, set of two variables
\begin{align*}
S_z &= D_z / D \\
S_y^{\textrm{tot}} &= 1 - S_z
\end{align*}

<div class="notes">

# This par. describes estimation of total Sobol indices

The $D_z$ are used in the calculation of total Sobol indices. For a
single variable, the total Sobol index is simply $1 - D_z / D$. I'm
not sure if it is common to calculate the total Sobol index for the
interaction between a pair of variables. What is described in Sobol's
2001 paper is the total index for a set of variables, which is again
$1 - D_z / D$. It determines the variance in the function output that
is due to all variables in the set, whether by themselves or through
an interaction with any other variables. This index can be used to
bound the probability of an error between the full model and a model
with the variables in $y$ fixed to a constant. More simply, you might
conclude that the model is not sensitive to variables in $y$ if
$S_y^{tot}$ is small. As you can see, it would not be too difficult to
write your own software to calculate these indices. However, there is
a well-developed R package available that makes it even easier.

</div>

# Minimal example of calculating Sobol indices

    > model <- function(X) X[, 1]*X[, 2] + X[, 3]
    > N <- 1000
    > X1 <- data.frame(matrix(runif(3 * N), nrow = N))
    > X2 <- data.frame(matrix(runif(3 * N), nrow = N))
    > sensitivity::sobol(model = model, X1 = X1, X2 = X2)

    Call:
    sensitivity::sobol(model = model, X1 = X1, X2 = X2)

    Model runs: 4000

    Sobol indices
	original
    X1 0.2772898
    X2 0.3252903
    X3 0.7352620

# Getting bootstrap confidence intervals

    > sobol(model = model, X1 = X1, X2 = X2, nboot=500)

    Call:
    sobol(model = model, X1 = X1, X2 = X2, nboot = 500)

    Model runs: 4000

    Sobol indices
	original          bias std. error   min. c.i. max. c.i.
    X1 0.1445575 -0.0006627282 0.09726050 -0.04670249 0.3348154
    X2 0.1307615  0.0047526522 0.09627432 -0.06896922 0.3320874
    X3 0.5338514  0.0034530365 0.06917633  0.38719837 0.6674093

# You can calculate all indices up to a given order

    > sobol(model = model, X1 = X1, X2 = X2, order=2)

    Call:
    sobol(model = model, X1 = X1, X2 = X2, order = 2)

    Model runs: 7000

    Sobol indices
	    original
    X1    0.14455747
    X2    0.13076148
    X3    0.53385138
    X1*X2 0.13273744
    X1*X3 0.06257828
    X2*X3 0.06257828

# You can calculate variances for any group of indices

    > order <- list(1, 2, c(1,2))
    > sobol(model = model, X1 = X1, X2 = X2, order=order)$V
	     original
    global 0.12970985
    X1     0.01875053
    X2     0.01696105
    X1*X2  0.05292894
    > c(.0529 - .0187 - .0169)/ .1297 # recalculate S_12
    [1] 0.1333847
    > 1 - .0529 / .129 # estimate S^tot_3
    [1] 0.5899225

<div class="notes">
#This par describes how to calculate Sobol indices in R

The sensitivity package makes calculating Sobol indices in R easy. You
first create two data frames containing samples of points within your
input parameter space. Then provides these along with your model to
the sobol function in the sensitivity package. Your model can be a
vectorized function, as show here, or a model object with a predict
method. By default, all first order indices are estimated. The number
of model runs is $ N (# indices + 1)$.

Basic bootstrap confidence intervals and standard errors can be
obtained by supplying the number of resampling replicates you would like.

Higher order sobol indices can be obtained via the order argument.

You can use the order to obtain $S_y$ for custom subsets $y$. The
output variable $V$ corresponds to the $D$ in our equations. Thus we
can check the previous calculation of $S_12$ and also obtain an
estimate of $S^tot_3$.

- quasi monte carlo
- decoupling
- list of use cases
So as usual, if you are working with deterministic models, your life
is easier. However, also as usual, with some work we can do a similar
analysis for a stochastic model.

</div>

<div class="notes">
# This par describes difficulties that occur with stochastic models

Calculating Sobol indices for stochastic models is a bit more complicated.


- memory use can be an issue, can try parallelziation

A general solution to these problems is to fit the original
simulations to a metamodel and then perform sensitivity analysis of
that metamodel.

</div>

<div class="notes">
# This par describes the joint metamodeling approach of Marrel et al.

A paper by Marrel and coauthors describes in detail one way to go about this.

The paper does not include any R code but I did find R packages that
had functions designed to carry out most of the major steps of the
method.

</div>

<div class="notes">
# This par describes how to fit a joint metamodel in R

The Dice suite of packages assists in fitting a metamodel.
</div>

<div class="notes">
# This par describes how to calculate the sobol indices from a metamodel

When the metamodels are fitted, calculating the sensitivity indices
according to the equations of Marrel and coauthors can again be done
with the sobol function.


These sobol indices can be examined along with visualization of the
metamodel to provide insight into the major relationships of the
model.

</div>

<div class="notes">
# This par describes how to visualize the metamodel

Often, we'd like to view the metamodel response and data to assess
goodness of fit and learn more about how the parameters affect the
response.

When only a few, low-rank sobol indices explain most of the variance,
you can summarize the model with a few plots.

</div>

<div class="notes">

# This par summarizes the presentation

In summary, we've seen what Sobol indices are, what they are used for,
and how to calculate them for both deterministic and stochastic models
in R.


I found several articles very helpful for learning about these methods.
</div>

<div class="notes">
# This par recommends references for further reading

Here's lists of references to both the theory and software.


</div>
